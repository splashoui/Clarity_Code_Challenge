# Import of Libraries and Inherited classes

import datetime
from application.parser import ParserHostConnection


# Defining the file path to read the input text file.
file_path = 'input_file/input-file-10000.txt'

# Program

class UnlimitedParserHostConnection(object):
    
    """
    
    Uses the self.host_name input which has been taken from the user in MainProgram() class 
    In order to:
    
    - find the connections generated by the host_name during the last hour
    - find the connections received the host_name during the last hour

    In case there is not generated connection happened during the last hour, it prints information.
    In case there is not any received connection happened during the last hour, it prints information.
    
    """
    
    def __init__(self, file_path, host_name):
        self.file_path = file_path
        self.host_name = host_name

    # A list of hostnames connected to a given (configurable) host during the last hour.
    def hosts_connected_to_input_host(self, init_time, end_time):
        
        """
        
        Inherits from the class ParserHostConnection to use the method create_list_of_hosts_to_conected()
        in order to output a list of hostnames connected to a given host during the last hour.
        
        """
        inherit = ParserHostConnection(file_path, init_time, end_time, self.host_name)
        return inherit.create_list_of_hosts_to_connected()

    def hosts_recieved_connection_from_input_host(self, init_time, end_time):

        """

        Inherits from the class ParserHostConnection to use the method create_list_of_hosts_to_conected()
        in order to output a list of hostnames received connection from a given host during the last hour.
        
        """   

        inherit = ParserHostConnection(file_path, init_time, end_time, self.host_name)
        return inherit.create_list_of_hosts_from_connected()

    def last_one_hour_parse(self):
        # Unix Time stamp in milliseconds
        # Creating variables for current time and an hour ago.
        end_time = int(datetime.datetime.timestamp(datetime.datetime.now())*1000)
        init_time = end_time - 3600000  # 3600000 milliseconds : 1 hour
        
        # Calling the methods above to retrieve the list of hosts connected and received connections during the last hour.                                            
        host_connected = self.hosts_connected_to_input_host(init_time, end_time)
        host_received  = self.hosts_recieved_connection_from_input_host(init_time, end_time)                           
        
        # Information depend on the existed or non existed connections during the last hour.
        if host_connected:
            print(f'\nThere has been {len(host_connected[0])} connections to the host "{self.host_name}" during the last hour.\n{host_connected}')
        else:
            print(f'\nThere is no any host connected to the host "{self.host_name}" during the last hour.')

        if host_received:
            print(f'There has been {len(host_connected)} hosts which received connection from "{self.host_name}" during the last hour.\n{host_received}')
        else:
            print(f'The host "{self.host_name}" has not connected to any hosts during the last hour.')
